@using FamilyAuto.Models
@model IEnumerable<FamilyAuto.Models.Vehicle>

@{
    ViewBag.Title = "Manage vehicle database";
}

<h2>Vehicle Listing</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-striped table-hover">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Make)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Model)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Variant)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Condition)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateUploaded)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Sold)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Make)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Variant)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Condition)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateUploaded)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sold)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>

@*<table>
    <tr ng-repeat="employee in employees">
        <td>{{ employee.firstName }}
        <td>
    </tr>
</table>

myApp.controller('myController', function ($scope) {
    $scope.init = function (employees)
        $scope.employees = @Model;
    }
});*@


@*<tbody data-bind="foreach: veh">
    <tr>
        <td data-bind="text: Make"></td>
        <td data-bind="text: Model"></td>
    </tr>
</tbody>

@section Scripts {
    <script>
        function ViewModel(veh) {
            var self = this;

            self.veh = @Model;
        };
        
        var viewModel = new ViewModel(@Html.Raw(Json.Encode(Model)));
        ko.applyBindings(viewModel);        
    </script>
}*@


http://stackoverflow.com/questions/11055336/how-to-use-knockout-js-with-asp-net-mvc-viewmodels